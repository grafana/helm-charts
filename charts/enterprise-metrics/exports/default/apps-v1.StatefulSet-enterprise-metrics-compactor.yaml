apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: enterprise-metrics-compactor
    app.kubernetes.io/managed-by: Helmraiser
    chart: enterprise-metrics-1.3.1
    heritage: Helm
    release: enterprise-metrics
  name: enterprise-metrics-compactor
  namespace: enterprise-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enterprise-metrics-compactor
      release: enterprise-metrics
  serviceName: enterprise-metrics-compactor
  template:
    metadata:
      annotations:
        checksum/config: 74c5ba5569cc04ab4f311648cc74459bebf069068ec259d073cdc680749e6684
      labels:
        app: enterprise-metrics-compactor
        gossip_ring_member: "true"
        name: compactor
        release: enterprise-metrics
        target: compactor
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: target
                  operator: In
                  values:
                  - compactor
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -target=compactor
        - -config.file=/etc/enterprise-metrics/enterprise-metrics.yaml
        - -memberlist.join=enterprise-metrics-gossip-ring
        - -admin.client.backend-type=s3
        - -admin.client.s3.endpoint=enterprise-metrics-minio.enterprise-metrics.svc:9000
        - -admin.client.s3.bucket-name=enterprise-metrics-admin
        - -admin.client.s3.access-key-id=enterprise-metrics
        - -admin.client.s3.secret-access-key=supersecret
        - -admin.client.s3.insecure=true
        - -blocks-storage.s3.endpoint=enterprise-metrics-minio.enterprise-metrics.svc:9000
        - -blocks-storage.s3.bucket-name=enterprise-metrics-tsdb
        - -blocks-storage.s3.access-key-id=enterprise-metrics
        - -blocks-storage.s3.secret-access-key=supersecret
        - -blocks-storage.s3.insecure=true
        env: null
        image: grafana/metrics-enterprise:v1.3.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 20
          httpGet:
            path: /ready
            port: http-metrics
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: enterprise-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 60
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/enterprise-metrics
          name: config
        - mountPath: /var/enterprise-metrics
          name: runtime-config
        - mountPath: /license
          name: license
        - mountPath: /data
          name: storage
      initContainers: []
      nodeSelector: {}
      securityContext: {}
      serviceAccountName: enterprise-metrics
      terminationGracePeriodSeconds: 240
      tolerations: []
      volumes:
      - name: config
        secret:
          secretName: enterprise-metrics
      - configMap:
          name: enterprise-metrics-runtime
        name: runtime-config
      - name: license
        secret:
          secretName: enterprise-metrics-license
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
