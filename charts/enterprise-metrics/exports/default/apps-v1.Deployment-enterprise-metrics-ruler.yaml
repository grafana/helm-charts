apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: enterprise-metrics-ruler
    app.kubernetes.io/managed-by: Helmraiser
    chart: enterprise-metrics-1.0.0
    heritage: Helm
    release: enterprise-metrics
  name: enterprise-metrics-ruler
  namespace: enterprise-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enterprise-metrics-ruler
      release: enterprise-metrics
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 76b402316e5b8f8299fb5ec9a5af6fe04e463ca9c56a0b4674615b926727dee2
      labels:
        app: enterprise-metrics-ruler
        name: ruler
        release: enterprise-metrics
        target: ruler
    spec:
      affinity: {}
      containers:
      - args:
        - -target=ruler
        - -config.file=/etc/enterprise-metrics/enterprise-metrics.yaml
        - -consul.hostname=enterprise-metrics-consul-server.enterprise-metrics.svc:8500
        - -ruler.ring.store=consul
        - -ruler.ring.consul.hostname=enterprise-metrics-consul-server.enterprise-metrics.svc:8500
        - -ruler.enable-sharding=true
        - -admin.client.backend-type=s3
        - -admin.client.s3.endpoint=enterprise-metrics-minio.enterprise-metrics.svc:9000
        - -admin.client.s3.bucket-name=enterprise-metrics-admin
        - -admin.client.s3.access-key-id=enterprise-metrics
        - -admin.client.s3.secret-access-key=supersecret
        - -admin.client.s3.insecure=true
        - -blocks-storage.s3.endpoint=enterprise-metrics-minio.enterprise-metrics.svc:9000
        - -blocks-storage.s3.bucket-name=enterprise-metrics-tsdb
        - -blocks-storage.s3.access-key-id=enterprise-metrics
        - -blocks-storage.s3.secret-access-key=supersecret
        - -blocks-storage.s3.insecure=true
        - -ruler.storage.type=s3
        - -ruler.storage.s3.endpoint=enterprise-metrics-minio.enterprise-metrics.svc:9000
        - -ruler.storage.s3.buckets=enterprise-metrics-ruler
        - -ruler.storage.s3.access-key-id=enterprise-metrics
        - -ruler.storage.s3.secret-access-key=supersecret
        - -ruler.storage.s3.insecure=true
        - -ruler.storage.s3.force-path-style=true
        - -ruler.alertmanager-url=http://enterprise-metrics-alertmanager.enterprise-metrics.svc:8080/api/prom/alertmanager/
        - -querier.store-gateway-addresses=dns+enterprise-metrics-store-gateway-headless.enterprise-metrics.svc:9095
        env: null
        image: grafana/metrics-enterprise:v1.1.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        name: enterprise-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/enterprise-metrics
          name: config
        - mountPath: /license
          name: license
        - mountPath: /data
          name: storage
          subPath: null
      initContainers: []
      nodeSelector: {}
      securityContext: {}
      serviceAccountName: enterprise-metrics
      terminationGracePeriodSeconds: 180
      tolerations: []
      volumes:
      - name: config
        secret:
          secretName: enterprise-metrics
      - name: license
        secret:
          secretName: enterprise-metrics-license
      - emptyDir: {}
        name: storage
