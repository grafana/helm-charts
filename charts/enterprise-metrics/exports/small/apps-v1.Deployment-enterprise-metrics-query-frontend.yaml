apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: enterprise-metrics-query-frontend
    app.kubernetes.io/managed-by: Helmraiser
    chart: enterprise-metrics-1.5.3
    heritage: Helm
    release: enterprise-metrics
  name: enterprise-metrics-query-frontend
  namespace: enterprise-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enterprise-metrics-query-frontend
      release: enterprise-metrics
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 93cf89a64608de5bc05baa30b88909afef562ee4b581fd2f3aed3dafc266dc64
      labels:
        app: enterprise-metrics-query-frontend
        name: query-frontend
        release: enterprise-metrics
        target: query-frontend
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: target
                  operator: In
                  values:
                  - query-frontend
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - -target=query-frontend
        - -config.file=/etc/enterprise-metrics/enterprise-metrics.yaml
        env: null
        image: grafana/metrics-enterprise:v1.5.0
        imagePullPolicy: IfNotPresent
        livenessProbe: null
        name: enterprise-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        resources:
          limits:
            memory: 6Gi
          requests:
            cpu: 2
            memory: 2Gi
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /var/enterprise-metrics
          name: runtime-config
        - mountPath: /license
          name: license
        - mountPath: /etc/enterprise-metrics
          name: config
      initContainers: []
      nodeSelector: {}
      securityContext: {}
      serviceAccountName: enterprise-metrics
      terminationGracePeriodSeconds: 180
      tolerations: []
      volumes:
      - name: config
        secret:
          secretName: enterprise-metrics
      - configMap:
          name: enterprise-metrics-runtime
        name: runtime-config
      - name: license
        secret:
          secretName: enterprise-metrics-license
