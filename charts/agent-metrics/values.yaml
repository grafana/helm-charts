# Whether this chart is enabled
# (useful when this chart is used as a dependency from another chart)
enabled: true

# DaemonSet annotations
annotations: {}

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: http-metrics

# Image configuration for the Agent container
image:
  repository: grafana/agent
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion
  tag: ""

# Additional command arguments for the Agent container
extraArgs: []

# Additional volumes for the Pod
extraVolumes: []

# Additional volume mounts for the Agent container
extraVolumeMounts: []

# Environment variables for the Agent container
env: []

# Readiness probe for the Agent container
readinessProbe:
  httpGet:
    path: /-/ready
    port: http-metrics

# Liveness probe for the Agent container
livenessProbe:
  httpGet:
    path: /-/healthy
    port: http-metrics

# Resources for the Agent container
resources: {}

# Security context for the Agent container
securityContext:
  privileged: true
  runAsUser: 0

# Pod node selector
nodeSelector: {}

# Pod affinity
affinity: {}

# Pod tolerations
tolerations:
  - effect: NoSchedule
    operator: Exists

# Whether to create Cluster Role and Cluster Role Binding
rbac:
  create: true

# Creation of the Sercret used by the Pod
secret:
  create: true
  mount: true
  annotations: {}
  data:
    password: ""

# Creation of the Service Account used by the Pod
serviceAccount:
  create: true
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  annotations: {}

# Number of replicas for the Deployment
deployment:
  replicas: 1

# Grafana Cloud connection
accessConfig:
  url: https://prometheus-blocks-prod-us-central1.grafana.net/api/prom/push
  username: ""
  # Path under which the secret.data.password is mounted in the container
  password_file: /var/run/secrets/grafana.com/agent/password

# Default scraping interval for the Agent DaemonSet
globalScrapeInterval: 15s

# Default scraping interval for the Agent Deployment
globalScrapeIntervalDeployment: 15s

# Scraping Service configuration of the DaemonSet
scrapingService: {}

# Scraping Service configuration of the Deployment
scrapingServiceDeployment: {}

# Allow to extend the bellow Agent DaemonSet configuration
extraConfig: {}
extraServiceConfig: []
extraDefaultConfigConfig: []
extraDefaultScrapeConfig: []

# Allow to extend the bellow Agent Deployment configuration
extraDeploymentConfig: {}
extraDeploymentServiceConfig: []
extraDeploymentServiceConfigConfig: []
extraDeploymentDefaultScrapeConfig: []

# Agent configuration
config:
  agent: |
    integrations:
      agent:
        enabled: true
    server:
      http_listen_port: 8080
      log_level: info
    prometheus:
      global:
        scrape_interval: {{ .Values.globalScrapeInterval }}
      wal_directory: /var/lib/agent/data
      {{- if .Values.scrapingService }}
      scraping_service:
        {{- toYaml .Values.scrapingService | nindent 4 }}
      {{- else }}
      configs:
        - name: default
          host_filter: true
          remote_write:
            - url: {{ .Values.accessConfig.url }}
              {{- if .Values.accessConfig.username }}
              basic_auth:
                username: {{ .Values.accessConfig.username }}
                password_file: {{ .Values.accessConfig.password_file }}
              {{- end }}
          scrape_configs:
            - job_name: grafana-agent
              kubernetes_sd_configs:
                - namespaces:
                    names:
                      - {{ .Release.Namespace }}
                  role: pod
              relabel_configs:
                - action: keep
                  regex: .*agent-(logs|metrics(|-deployment)|traces)
                  source_labels:
                    - __meta_kubernetes_pod_label_app_kubernetes_io_component
                - action: keep
                  regex: .*-metrics
                  source_labels:
                    - __meta_kubernetes_pod_container_port_name
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - action: drop
                  regex: "false"
                  source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_scrape
                - action: keep
                  regex: .*-metrics
                  source_labels:
                    - __meta_kubernetes_pod_container_port_name
                - action: replace
                  regex: (https?)
                  replacement: $1
                  source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_scheme
                  target_label: __scheme__
                - action: replace
                  regex: (.+)
                  replacement: $1
                  source_labels:
                    - __meta_kubernetes_pod_annotation_prometheus_io_path
                  target_label: __metrics_path__
                - action: replace
                  regex: (.+?)(\:\d+)?;(\d+)
                  replacement: $1:$3
                  source_labels:
                    - __address__
                    - __meta_kubernetes_pod_annotation_prometheus_io_port
                  target_label: __address__
                - action: drop
                  regex: ""
                  source_labels:
                    - __meta_kubernetes_pod_label_name
                - action: replace
                  replacement: $1
                  separator: /
                  source_labels:
                    - __meta_kubernetes_namespace
                    - __meta_kubernetes_pod_label_name
                  target_label: job
                - action: replace
                  source_labels:
                    - __meta_kubernetes_namespace
                  target_label: namespace
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_name
                  target_label: pod
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_container_name
                  target_label: container
                - action: replace
                  separator: ':'
                  source_labels:
                    - __meta_kubernetes_pod_name
                    - __meta_kubernetes_pod_container_name
                    - __meta_kubernetes_pod_container_port_name
                  target_label: instance
                - action: labelmap
                  regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                  replacement: __param_$1
                - action: drop
                  regex: Succeeded|Failed
                  source_labels:
                    - __meta_kubernetes_pod_phase
            - job_name: {{ .Release.Namespace }}/kube-state-metrics
              kubernetes_sd_configs:
                - namespaces:
                    names:
                      - {{ .Release.Namespace }}
                  role: pod
              relabel_configs:
                - action: keep
                  regex: kube-state-metrics
                  source_labels:
                    - __meta_kubernetes_pod_label_name
                - action: replace
                  separator: ':'
                  source_labels:
                    - __meta_kubernetes_pod_name
                    - __meta_kubernetes_pod_container_name
                    - __meta_kubernetes_pod_container_port_name
                  target_label: instance
            - job_name: {{ .Release.Namespace }}/node-exporter
              kubernetes_sd_configs:
                - namespaces:
                    names:
                      - {{ .Release.Namespace }}
                  role: pod
              relabel_configs:
                - action: keep
                  regex: node-exporter
                  source_labels:
                    - __meta_kubernetes_pod_label_name
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_node_name
                  target_label: instance
                - action: replace
                  source_labels:
                    - __meta_kubernetes_namespace
                  target_label: namespace
            - job_name: kube-system/kubelet
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - replacement: kubernetes.default.svc.cluster.local:443
                  target_label: __address__
                - replacement: https
                  target_label: __scheme__
                - regex: (.+)
                  replacement: /api/v1/nodes/${1}/proxy/metrics
                  source_labels:
                    - __meta_kubernetes_node_name
                  target_label: __metrics_path__
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
            - job_name: kube-system/cadvisor
              kubernetes_sd_configs:
                - role: node
              metric_relabel_configs:
                - action: drop
                  regex: container_([a-z_]+);
                  source_labels:
                    - __name__
                    - image
                - action: drop
                  regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
                  source_labels:
                    - __name__
              relabel_configs:
                - replacement: kubernetes.default.svc.cluster.local:443
                  target_label: __address__
                - regex: (.+)
                  replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
                  source_labels:
                    - __meta_kubernetes_node_name
                  target_label: __metrics_path__
              scheme: https
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
            {{- with .Values.extraDefaultScrapeConfig }}
            {{- toYaml . | nindent 8 }}
            {{- end }}
        {{- with .Values.extraServiceConfigConfig }}
        {{- toYaml . | nindent 4 }}
        {{- end }}
      {{- end }}
      {{- with .Values.extraServiceConfig }}
      {{- toYaml . | nindent 2 }}
      {{- end }}
    {{- with .Values.extraConfig }}{{ "\n" }}
    {{- toYaml . }}
    {{- end }}
  agentDeployment: |
    integrations:
      agent:
        enabled: true
    server:
      http_listen_port: 8080
      log_level: info
    prometheus:
      global:
        scrape_interval: {{ .Values.globalScrapeIntervalDeployment }}
      wal_directory: /var/lib/agent/data
      {{- if .Values.scrapingServiceDeployment }}
      scraping_service:
        {{- toYaml .Values.scrapingServiceDeployment | nindent 4 }}
      {{- else }}
      configs:
        - name: default
          host_filter: false
          remote_write:
            - url: {{ .Values.accessConfig.url }}
              {{- if .Values.accessConfig.username }}
              basic_auth:
                username: {{ .Values.accessConfig.username }}
                password_file: {{ .Values.accessConfig.password_file }}
              {{- end }}
          scrape_configs:
            - job_name: default/kubernetes
              kubernetes_sd_configs:
                - role: endpoints
              metric_relabel_configs:
                - action: keep
                  regex: workqueue_queue_duration_seconds_bucket|process_cpu_seconds_total|process_resident_memory_bytes|workqueue_depth|rest_client_request_duration_seconds_bucket|workqueue_adds_total|up|rest_client_requests_total|apiserver_request_total|go_goroutines
                  source_labels:
                    - __name__
              relabel_configs:
                - action: keep
                  regex: apiserver
                  source_labels:
                    - __meta_kubernetes_service_label_component
              scheme: https
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: false
                server_name: kubernetes
            {{- with .Values.extraDeploymentDefaultScrapeConfig }}
            {{- toYaml . | nindent 8 }}
            {{- end }}
        {{- with .Values.extraDeploymentServiceConfigConfig }}
        {{- toYaml . | nindent 4 }}
        {{- end }}
      {{- end }}
      {{- with .Values.extraDeploymentServiceConfig }}
      {{- toYaml . | nindent 2 }}
      {{- end }}
    {{- with .Values.extraDeploymentConfig }}{{ "\n" }}
    {{- toYaml . }}
    {{- end }}
