{{- if .Values.gateway.enabled }}
{{- if .Values.gateway.ingress.enabled -}}
{{- $newAPI := .Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" -}}
{{- if $newAPI -}}
apiVersion: networking.k8s.io/v1
{{- else }}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ include "loki.gatewayFullname" . }}
  labels:
    {{- include "loki.gatewayLabels" . | nindent 4 }}
  {{- with .Values.gateway.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if $newAPI }}
  {{- if .Values.gateway.ingress.ingressClassName }}
  ingressClassName: {{ .Values.gateway.ingress.ingressClassName }}
  {{- end }}
  {{- end }}
  {{- if .Values.gateway.ingress.tls }}
  tls:
    {{- range .Values.gateway.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      {{- with .secretName }}
      secretName: {{ . }}
      {{- end }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.gateway.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if $newAPI }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if $newAPI }}
              service:
                name: {{ include "loki.gatewayFullname" $ }}
                port:
                  number: {{ $.Values.gateway.service.port }}
              {{- else }}
              serviceName: {{ include "loki.gatewayFullname" $ }}
              servicePort: {{ $.Values.gateway.service.port }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }}
