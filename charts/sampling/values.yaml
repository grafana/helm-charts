metricsGeneration:
  enabled: true
  dimensions:
    - service.namespace
    - service.version
    - deployment.environment
    - k8s.pod.name
    - k8s.cluster.name

sampling:
  enabled: true
  successfulRequests:
    sample: true
    percentage: 10
  failedRequests:
    sample: false
    percentage: 50
  extraPolicies: |-
    policy {
      name = "sample-long-requests"
      type = "and"
      and {
        and_sub_policy {
          name = "latency"
          type = "latency"
          latency {
            threshold_ms = 5000
          }
        }
        and_sub_policy {
         name = "probabilistic-policy"
         type = "probabilistic"
          probabilistic {
           sampling_percentage = 50
          }
        }
      }
    }

grafana-agent-deployment:
  controller:
    type: deployment
    autoscaling:
      # -- Creates a HorizontalPodAutoscaler for controller type deployment.
      enabled: true
      # -- The lower limit for the number of replicas to which the autoscaler can scale down.
      minReplicas: 1
      # -- The upper limit for the number of replicas to which the autoscaler can scale up.
      maxReplicas: 5
      # -- Average CPU utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetCPUUtilizationPercentage` to 0 will disable CPU scaling.
      targetCPUUtilizationPercentage: 0
      # -- Average Memory utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetMemoryUtilizationPercentage` to 0 will disable Memory scaling.
      targetMemoryUtilizationPercentage: 80
  agent:
    # This chart creates the configmaps
    configMap:
      create: false
    resources:
      requests:
        cpu: "1"
        memory: "2G"
    extraPorts:
      - name: otlp-grpc
        port: 4317
        targetPort: 4317
        protocol: TCP
      - name: otlp-http
        port: 4318
        targetPort: 4318
        protocol: TCP

grafana-agent-statefulset:
  controller:
    type: statefulset
    autoscaling:
      # -- Creates a HorizontalPodAutoscaler for controller type deployment.
      enabled: true
      # -- The lower limit for the number of replicas to which the autoscaler can scale down.
      minReplicas: 1
      # -- The upper limit for the number of replicas to which the autoscaler can scale up.
      maxReplicas: 5
      # -- Average CPU utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetCPUUtilizationPercentage` to 0 will disable CPU scaling.
      targetCPUUtilizationPercentage: 0
      # -- Average Memory utilization across all relevant pods, a percentage of the requested value of the resource for the pods. Setting `targetMemoryUtilizationPercentage` to 0 will disable Memory scaling.
      targetMemoryUtilizationPercentage: 80
  service:
    clusterIP: None
  agent:
    extraEnv:
      - name: GRAFANA_CLOUD_API_KEY
        value: <REQUIRED>
      - name: GRAFANA_CLOUD_PROMETHEUS_URL
        value: <REQUIRED>
      - name: GRAFANA_CLOUD_PROMETHEUS_USERNAME
        value: <REQUIRED>
      - name: GRAFANA_CLOUD_TEMPO_ENDPOINT
        value: <REQUIRED>
      - name: GRAFANA_CLOUD_TEMPO_USERNAME
        value: <REQUIRED>
      # This is required for adaptive metric deduplication in Grafana Cloud
      - name: POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
    # This chart creates the configmaps
    configMap:
      create: false
    resources:
      requests:
        cpu: "1"
        memory: "2G"
    extraPorts:
      - name: otlp-grpc
        port: 4317
        targetPort: 4317
        protocol: TCP
  # The statefulset and deployment can share the same serviceAccount and rbac roles
  serviceAccount:
    create: false
  rbac:
    create: false
